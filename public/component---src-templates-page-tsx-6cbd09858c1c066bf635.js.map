{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Container.tsx","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx"],"names":["PageTemplate","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_2__","_components_Container__WEBPACK_IMPORTED_MODULE_3__","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","dark","darker","black","white","blue","light","grey","darkGray","coral","sansSerif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","getEmSize","Container","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_variables__WEBPACK_IMPORTED_MODULE_0__","size","m","module","exports","require","default","StyledPage","Page","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","normalize","StyledHeader","styled_base_browser_esm","name","styles","HeaderInner","HeaderItemList","HeaderItem","HeaderLink","Link","HeaderButton","Header","core_browser_esm","to","StyledLayoutRoot","LayoutRoot","react","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","components_Header","components_LayoutMain","_991718019"],"mappings":"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","file":"component---src-templates-page-tsx-6cbd09858c1c066bf635.js","sourcesContent":["import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Page from '../components/Page'\r\nimport Container from '../components/Container'\r\nimport IndexLayout from '../layouts'\r\n\r\ninterface PageTemplateProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string\r\n        description: string\r\n        author: {\r\n          name: string\r\n          url: string\r\n        }\r\n      }\r\n    }\r\n    markdownRemark: {\r\n      html: string\r\n      excerpt: string\r\n      frontmatter: {\r\n        title: string\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => (\r\n  <IndexLayout>\r\n    <Page>\r\n      <Container>\r\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\r\n        {/* eslint-disable-next-line react/no-danger */}\r\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\r\n      </Container>\r\n    </Page>\r\n  </IndexLayout>\r\n)\r\n\r\nexport default PageTemplate\r\n\r\nexport const query = graphql`\r\n  query PageTemplateQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author {\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","/* eslint-disable max-len */\r\n\r\nexport const colors = {\r\n  dark: '#2C313A',\r\n  darker: '#21252B',\r\n  black: '#000000',\r\n  white: '#FFFFFF',\r\n  blue: '#4D78CC',\r\n  light: '#F8FAFD',\r\n  grey: '#DCDCDC',\r\n  darkGray: '#839496',\r\n  coral: '#e06c75'\r\n}\r\n\r\nexport const fonts = {\r\n  sansSerif: 'Roboto',\r\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\r\n}\r\n\r\nexport const breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200\r\n}\r\n\r\nexport const widths = {\r\n  md: 720,\r\n  lg: 960,\r\n  xl: 1140\r\n}\r\n\r\nexport const dimensions = {\r\n  fontSize: {\r\n    regular: 16,\r\n    large: 18\r\n  },\r\n  headingSizes: {\r\n    h1: 4,\r\n    h2: 3,\r\n    h3: 2,\r\n    h4: 1.25\r\n  },\r\n  lineHeight: {\r\n    regular: 1.45,\r\n    heading: 1.2\r\n  },\r\n  containerPadding: 1.5\r\n}\r\n\r\nexport const heights = {\r\n  header: 150\r\n}\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { widths } from '../styles/variables'\r\nimport { getEmSize } from '../styles/mixins'\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: auto;\r\n  max-width: ${getEmSize(widths.lg)}em;\r\n`\r\n\r\ninterface ContainerProps {\r\n  className?: string\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\r\n\r\nexport default Container\r\n","import { dimensions } from './variables'\r\n\r\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { dimensions } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n  padding: ${dimensions.containerPadding}rem;\r\n  margin-bottom: 3rem;\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\r\n\r\nexport default Page\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { dimensions, fonts, colors, breakpoints } from './variables'\r\nimport { getEmSize } from './mixins'\r\n\r\nexport default `\r\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;600;700;900&display=swap');\r\n  @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  html {\r\n    font-size: ${dimensions.fontSize.regular}px !important;\r\n    line-height: ${dimensions.lineHeight.regular} !important;\r\n  }\r\n\r\n  body {\r\n    width: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    font-family: ${fonts.sansSerif};\r\n    color: ${colors.grey};\r\n    background-color: ${colors.darker};\r\n    -webkit-text-size-adjust: 100%;\r\n    -ms-text-size-adjust: 100%;\r\n  }\r\n\r\n  a {\r\n\r\n    text-decoration: none;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    object-fit: contain;\r\n    position: relative;\r\n  }\r\n\r\n  figure {\r\n    margin: 2rem 0;\r\n  }\r\n\r\n  figcaption {\r\n    font-size: 80%;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n\r\n    font-size: 85%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding: .25rem .5rem;\r\n\r\n  }\r\n\r\n  th {\r\n    text-align: left;\r\n  }\r\n\r\n\r\n\r\n  h1, h2, h3, h4, h5, h6 {\r\n    margin-top: 1.414rem;\r\n    margin-bottom: .5rem;\r\n    color: ${colors.black};\r\n    font-weight: 600;\r\n    line-height: ${dimensions.lineHeight.heading};\r\n    text-rendering: optimizeLegibility;\r\n  }\r\n\r\n  h1 {\r\n    margin-top: 0;\r\n    font-size: ${dimensions.headingSizes.h1}rem;\r\n  }\r\n\r\n  h2 {\r\n    font-size: ${dimensions.headingSizes.h2}rem;\r\n  }\r\n\r\n  h3 {\r\n    font-size: ${dimensions.headingSizes.h3}rem;\r\n  }\r\n\r\n  h4, h5, h6 {\r\n    font-size: ${dimensions.headingSizes.h4}rem;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  strong {\r\n    color: ${colors.black};\r\n  }\r\n\r\n  ul,\r\n  ol,\r\n  dl {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  dt {\r\n    font-weight: bold;\r\n  }\r\n\r\n  dd {\r\n    margin-bottom: .5rem;\r\n  }\r\n\r\n  hr {\r\n    position: relative;\r\n    margin: 1.5rem 0;\r\n    border: 0;\r\n\r\n  }\r\n\r\n  blockquote {\r\n    margin: .8rem 0;\r\n    padding: .5rem 1rem;\r\n\r\n\r\n    p {\r\n      &:last-child {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n\r\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\r\n      padding-right: 5rem;\r\n      padding-left: 1.25rem;\r\n    }\r\n  }\r\n\r\n.rwt__tablist[aria-orientation=\"vertical\"] .rwt__tab[aria-selected=\"true\"]:after {\r\n  border-right: none;\r\n}\r\n.rwt__tablist[aria-orientation=\"vertical\"] .rwt__tab[aria-selected=\"true\"] {\r\n  border-left: 5px solid ${colors.coral};\r\n  color: ${colors.white};\r\n  font-weight: bold;\r\n}\r\n`\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { colors } from '../styles/variables'\r\nimport Container from './Container'\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 30px 70px;\r\n`\r\n\r\nconst HeaderInner = styled(Container)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst HeaderItemList = styled.ul`\r\n  list-style: none;\r\n  margin-left: auto;\r\n`\r\n\r\nconst HeaderItem = styled.li`\r\n  display: inline-block;\r\n  padding: 0 15px;\r\n`\r\n\r\nconst HeaderLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  transition: background-color 0.1s;\r\n  color: white;\r\n  height: 60px;\r\n  font-size: 18px;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  padding: 0 40px;\r\n  max-width: 80px;\r\n`\r\n\r\nconst HeaderButton = styled.button`\r\n  border: 4px solid ${colors.blue};\r\n  background-color: ${colors.darker};\r\n  color: ${colors.blue};\r\n  padding: 14px 28px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  font-style: normal;\r\n  line-height: 21px;\r\n  cursor: pointer;\r\n  border-radius: 0.25rem;\r\n  margin-left: 1rem;\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  &:hover {\r\n    background-color: ${colors.blue};\r\n    color: white;\r\n  }\r\n`\r\n\r\ninterface HeaderProps {\r\n  title: string\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ title }) => {\r\n  // const [page, setPage] = useState('')\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <HeaderInner>\r\n        <HeaderItemList>\r\n          <HeaderItem>\r\n            <HeaderLink to=\"/\">About</HeaderLink>\r\n          </HeaderItem>\r\n          <HeaderItem>\r\n            <HeaderLink to=\"/blog\">Blog</HeaderLink>\r\n          </HeaderItem>\r\n          <HeaderItem>\r\n            <HeaderButton>Resume</HeaderButton>\r\n          </HeaderItem>\r\n        </HeaderItemList>\r\n      </HeaderInner>\r\n    </StyledHeader>\r\n  )\r\n}\r\nexport default Header\r\n","import * as React from 'react'\r\nimport { Global, css } from '@emotion/core'\r\nimport styled from '@emotion/styled'\r\nimport normalize from '../styles/normalize'\r\n\r\nconst StyledLayoutRoot = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`\r\n\r\ninterface LayoutRootProps {\r\n  className?: string\r\n}\r\n\r\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\r\n  <>\r\n    <Global styles={() => css(normalize)} />\r\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\r\n  </>\r\n)\r\n\r\nexport default LayoutRoot\r\n","import * as React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst StyledLayoutMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`\r\n\r\ninterface LayoutMainProps {\r\n  className?: string\r\n}\r\n\r\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\r\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\r\n)\r\n\r\nexport default LayoutMain\r\n","import * as React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport 'modern-normalize'\r\nimport '../styles/normalize'\r\n\r\nimport Header from '../components/Header'\r\nimport LayoutRoot from '../components/LayoutRoot'\r\nimport LayoutMain from '../components/LayoutMain'\r\n\r\ninterface StaticQueryProps {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n      description: string\r\n      keywords: string\r\n    }\r\n  }\r\n}\r\n\r\nconst IndexLayout: React.FC = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query IndexLayoutQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={(data: StaticQueryProps) => (\r\n      <LayoutRoot>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            { name: 'description', content: data.site.siteMetadata.description },\r\n            { name: 'keywords', content: data.site.siteMetadata.keywords }\r\n          ]}\r\n        />\r\n        <Header />\r\n        <LayoutMain>{children}</LayoutMain>\r\n      </LayoutRoot>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default IndexLayout\r\n"],"sourceRoot":""}